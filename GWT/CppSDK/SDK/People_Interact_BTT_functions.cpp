#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: People_Interact_BTT

#include "Basic.hpp"

#include "People_Interact_BTT_classes.hpp"
#include "People_Interact_BTT_parameters.hpp"


namespace SDK
{

// Function People_Interact_BTT.People_Interact_BTT_C.ExecuteUbergraph_People_Interact_BTT
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPeople_Interact_BTT_C::ExecuteUbergraph_People_Interact_BTT(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "ExecuteUbergraph_People_Interact_BTT");

	Params::People_Interact_BTT_C_ExecuteUbergraph_People_Interact_BTT Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function People_Interact_BTT.People_Interact_BTT_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPeople_Interact_BTT_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "ReceiveAbortAI");

	Params::People_Interact_BTT_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function People_Interact_BTT.People_Interact_BTT_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPeople_Interact_BTT_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "ReceiveTickAI");

	Params::People_Interact_BTT_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function People_Interact_BTT.People_Interact_BTT_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPeople_Interact_BTT_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "ReceiveExecuteAI");

	Params::People_Interact_BTT_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function People_Interact_BTT.People_Interact_BTT_C.SubPhaseTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPeople_Interact_BTT_C::SubPhaseTurn(class APawn* ControlledPawn, bool* CanNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "SubPhaseTurn");

	Params::People_Interact_BTT_C_SubPhaseTurn Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (CanNext != nullptr)
		*CanNext = Parms.CanNext;
}


// Function People_Interact_BTT.People_Interact_BTT_C.SubPhaseWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPeople_Interact_BTT_C::SubPhaseWait(class APawn* ControlledPawn, bool* CanNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "SubPhaseWait");

	Params::People_Interact_BTT_C_SubPhaseWait Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (CanNext != nullptr)
		*CanNext = Parms.CanNext;
}


// Function People_Interact_BTT.People_Interact_BTT_C.ActTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPeople_Interact_BTT_C::ActTalk(class APawn* ControlledPawn, float DeltaSeconds, bool* CanNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "ActTalk");

	Params::People_Interact_BTT_C_ActTalk Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (CanNext != nullptr)
		*CanNext = Parms.CanNext;
}


// Function People_Interact_BTT.People_Interact_BTT_C.SubPhaseTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPeople_Interact_BTT_C::SubPhaseTalk(class APawn* ControlledPawn, bool* CanNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "SubPhaseTalk");

	Params::People_Interact_BTT_C_SubPhaseTalk Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (CanNext != nullptr)
		*CanNext = Parms.CanNext;
}


// Function People_Interact_BTT.People_Interact_BTT_C.SubPhaseEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPeople_Interact_BTT_C::SubPhaseEnd(class APawn* ControlledPawn, float DeltaSeconds, bool* CanNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("People_Interact_BTT_C", "SubPhaseEnd");

	Params::People_Interact_BTT_C_SubPhaseEnd Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (CanNext != nullptr)
		*CanNext = Parms.CanNext;
}

}

