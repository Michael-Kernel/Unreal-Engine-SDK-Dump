#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wp0000_AN

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TangoLib_structs.hpp"


namespace SDK::Params
{

// Function wp0000_AN.wp0000_AN_C.ExecuteUbergraph_wp0000_AN
// 0x0018 (0x0018 - 0x0000)
struct Wp0000_AN_C_ExecuteUbergraph_wp0000_AN final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Request;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Blueprint_DoCountFloat_NowValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETngMathFuncCountState                        CallFunc_Blueprint_DoCountFloat_State;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN) == 0x000004, "Wrong alignment on Wp0000_AN_C_ExecuteUbergraph_wp0000_AN");
static_assert(sizeof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN) == 0x000018, "Wrong size on Wp0000_AN_C_ExecuteUbergraph_wp0000_AN");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, EntryPoint) == 0x000000, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, K2Node_Event_Request) == 0x000008, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::K2Node_Event_Request' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, CallFunc_Blueprint_DoCountFloat_NowValue) == 0x000010, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::CallFunc_Blueprint_DoCountFloat_NowValue' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, CallFunc_Blueprint_DoCountFloat_State) == 0x000014, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::CallFunc_Blueprint_DoCountFloat_State' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, K2Node_SwitchName_CmpSuccess) == 0x000015, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Wp0000_AN_C_ExecuteUbergraph_wp0000_AN, K2Node_SwitchEnum_CmpSuccess) == 0x000016, "Member 'Wp0000_AN_C_ExecuteUbergraph_wp0000_AN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function wp0000_AN.wp0000_AN_C.RequestAnim
// 0x0008 (0x0008 - 0x0000)
struct Wp0000_AN_C_RequestAnim final
{
public:
	class FName                                   Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0000_AN_C_RequestAnim) == 0x000004, "Wrong alignment on Wp0000_AN_C_RequestAnim");
static_assert(sizeof(Wp0000_AN_C_RequestAnim) == 0x000008, "Wrong size on Wp0000_AN_C_RequestAnim");
static_assert(offsetof(Wp0000_AN_C_RequestAnim, Request) == 0x000000, "Member 'Wp0000_AN_C_RequestAnim::Request' has a wrong offset!");

// Function wp0000_AN.wp0000_AN_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Wp0000_AN_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0000_AN_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Wp0000_AN_C_BlueprintUpdateAnimation");
static_assert(sizeof(Wp0000_AN_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Wp0000_AN_C_BlueprintUpdateAnimation");
static_assert(offsetof(Wp0000_AN_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Wp0000_AN_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function wp0000_AN.wp0000_AN_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Wp0000_AN_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Wp0000_AN_C_AnimGraph) == 0x000008, "Wrong alignment on Wp0000_AN_C_AnimGraph");
static_assert(sizeof(Wp0000_AN_C_AnimGraph) == 0x000010, "Wrong size on Wp0000_AN_C_AnimGraph");
static_assert(offsetof(Wp0000_AN_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Wp0000_AN_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

