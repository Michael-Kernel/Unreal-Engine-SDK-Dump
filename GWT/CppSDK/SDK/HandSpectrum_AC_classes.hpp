#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HandSpectrum_AC

#include "Basic.hpp"

#include "Snowfall_structs.hpp"
#include "Snowfall_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HandSpectrum_AC.HandSpectrum_AC_C
// 0x0070 (0x0730 - 0x06C0)
class AHandSpectrum_AC_C final : public ASnfWeaponHandSpectrum
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   LaunchFX;                                          // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<ESnfWeaponType, class FName>             HandSpectrumPlayListName;                          // 0x06D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_HandSpectrum_AC(int32 EntryPoint);
	void OnNotifyHit(class AActor* HitActor, class AActor* Causer);
	void StartHandSpectrumEffect(ESnfWeaponType EffectType, const struct FVector_NetQuantize& LeftHandLocation, const struct FVector_NetQuantize& RightLocation);
	void PlaybackLaunchEffect(uint8 EffectType, const struct FVector& LeftHandLocation, const struct FVector& RightHandLocation);
	void SetupFXPropActor();
	void OnEquipCallbackEvent();
	void ReceiveBeginPlay();
	void SetRadialCenterOnGameVector(const struct FVector& Location);
	bool IsHitIgnoreActor(const class AActor* Causer, const class AActor* InHitActor, bool bCheckTeamId, bool bCheckOwner, bool bCheckClass);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HandSpectrum_AC_C">();
	}
	static class AHandSpectrum_AC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHandSpectrum_AC_C>();
	}
};
static_assert(alignof(AHandSpectrum_AC_C) == 0x000010, "Wrong alignment on AHandSpectrum_AC_C");
static_assert(sizeof(AHandSpectrum_AC_C) == 0x000730, "Wrong size on AHandSpectrum_AC_C");
static_assert(offsetof(AHandSpectrum_AC_C, UberGraphFrame) == 0x0006C0, "Member 'AHandSpectrum_AC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHandSpectrum_AC_C, LaunchFX) == 0x0006C8, "Member 'AHandSpectrum_AC_C::LaunchFX' has a wrong offset!");
static_assert(offsetof(AHandSpectrum_AC_C, Sphere) == 0x0006D0, "Member 'AHandSpectrum_AC_C::Sphere' has a wrong offset!");
static_assert(offsetof(AHandSpectrum_AC_C, HandSpectrumPlayListName) == 0x0006D8, "Member 'AHandSpectrum_AC_C::HandSpectrumPlayListName' has a wrong offset!");

}

