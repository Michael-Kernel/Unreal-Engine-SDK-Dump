#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: People_Job_BTT

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Snowfall_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function People_Job_BTT.People_Job_BTT_C.ExecuteUbergraph_People_Job_BTT
// 0x00E0 (0x00E0 - 0x0000)
struct People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTngAnimInstance*                       CallFunc_GetTngAnimInstanceFromActor_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfPeopleAnimInstance*                 K2Node_DynamicCast_AsSnf_People_Anim_Instance;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USnfJobComponent*                       CallFunc_GetJobInActor_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASnfNpcHumanoidCharacter*               K2Node_DynamicCast_AsSnf_Npc_Humanoid_Character;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASnfAIController_BP_C*                  K2Node_DynamicCast_AsSnf_AIController_BP;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdatePoint_CanNext;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdatePath_CanNext;                       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlackboardValueAsInt_ReturnValue;      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionAndGravity_IsEnableCollision; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCollisionAndGravity_IsEnableGravity;   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCollisionAndGravity_ReturnValue;       // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT) == 0x000010, "Wrong alignment on People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT");
static_assert(sizeof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT) == 0x0000E0, "Wrong size on People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, EntryPoint) == 0x000000, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::EntryPoint' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_OwnerController_2) == 0x000008, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetTngAnimInstanceFromActor_ReturnValue) == 0x000018, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetTngAnimInstanceFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000020, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_AsSnf_People_Anim_Instance) == 0x000028, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_AsSnf_People_Anim_Instance' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetJobInActor_ReturnValue) == 0x000070, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetJobInActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_AsSnf_Npc_Humanoid_Character) == 0x000078, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_AsSnf_Npc_Humanoid_Character' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_OwnerController_1) == 0x000088, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_ControlledPawn_1) == 0x000090, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_AsSnf_AIController_BP) == 0x0000A0, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_AsSnf_AIController_BP' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_UpdatePoint_CanNext) == 0x0000A9, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_UpdatePoint_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_UpdatePath_CanNext) == 0x0000AA, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_UpdatePath_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, Temp_int_Variable) == 0x0000AC, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_OwnerController) == 0x0000B0, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Event_ControlledPawn) == 0x0000B8, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x0000C0, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetBlackboardValueAsInt_ReturnValue) == 0x0000C4, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetBlackboardValueAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, Temp_bool_Variable) == 0x0000C8, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, K2Node_Select_Default) == 0x0000CC, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetCollisionAndGravity_IsEnableCollision) == 0x0000D0, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetCollisionAndGravity_IsEnableCollision' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetCollisionAndGravity_IsEnableGravity) == 0x0000D1, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetCollisionAndGravity_IsEnableGravity' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT, CallFunc_GetCollisionAndGravity_ReturnValue) == 0x0000D2, "Member 'People_Job_BTT_C_ExecuteUbergraph_People_Job_BTT::CallFunc_GetCollisionAndGravity_ReturnValue' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct People_Job_BTT_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(People_Job_BTT_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on People_Job_BTT_C_ReceiveAbortAI");
static_assert(sizeof(People_Job_BTT_C_ReceiveAbortAI) == 0x000010, "Wrong size on People_Job_BTT_C_ReceiveAbortAI");
static_assert(offsetof(People_Job_BTT_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(People_Job_BTT_C_ReceiveTickAI) == 0x000008, "Wrong alignment on People_Job_BTT_C_ReceiveTickAI");
static_assert(sizeof(People_Job_BTT_C_ReceiveTickAI) == 0x000018, "Wrong size on People_Job_BTT_C_ReceiveTickAI");
static_assert(offsetof(People_Job_BTT_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'People_Job_BTT_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct People_Job_BTT_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(People_Job_BTT_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on People_Job_BTT_C_ReceiveExecuteAI");
static_assert(sizeof(People_Job_BTT_C_ReceiveExecuteAI) == 0x000010, "Wrong size on People_Job_BTT_C_ReceiveExecuteAI");
static_assert(offsetof(People_Job_BTT_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.UpdatePath
// 0x00A0 (0x00A0 - 0x0000)
struct People_Job_BTT_C_UpdatePath final
{
public:
	class ASnfAIController_BP_C*                  OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobType*                            JobType;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewLocalVar_2;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobType_Path*                       K2Node_DynamicCast_AsPath;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSnfJobTypeList                        CallFunc_GetLatestJobPathActions_OutLatestJobPathAction; // 0x0038(0x0018)(ContainsInstancedReference)
	bool                                          CallFunc_GetLatestJobPathActions_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetPathTransform_ReturnValue;             // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Update_Actions_CanNext;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_UpdatePath) == 0x000010, "Wrong alignment on People_Job_BTT_C_UpdatePath");
static_assert(sizeof(People_Job_BTT_C_UpdatePath) == 0x0000A0, "Wrong size on People_Job_BTT_C_UpdatePath");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_UpdatePath::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_UpdatePath::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, DeltaSeconds) == 0x000010, "Member 'People_Job_BTT_C_UpdatePath::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, JobType) == 0x000018, "Member 'People_Job_BTT_C_UpdatePath::JobType' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, CanNext) == 0x000020, "Member 'People_Job_BTT_C_UpdatePath::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, NewLocalVar_2) == 0x000024, "Member 'People_Job_BTT_C_UpdatePath::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, K2Node_DynamicCast_AsPath) == 0x000028, "Member 'People_Job_BTT_C_UpdatePath::K2Node_DynamicCast_AsPath' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'People_Job_BTT_C_UpdatePath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, CallFunc_GetLatestJobPathActions_OutLatestJobPathAction) == 0x000038, "Member 'People_Job_BTT_C_UpdatePath::CallFunc_GetLatestJobPathActions_OutLatestJobPathAction' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, CallFunc_GetLatestJobPathActions_ReturnValue) == 0x000050, "Member 'People_Job_BTT_C_UpdatePath::CallFunc_GetLatestJobPathActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, CallFunc_GetPathTransform_ReturnValue) == 0x000060, "Member 'People_Job_BTT_C_UpdatePath::CallFunc_GetPathTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePath, CallFunc_Update_Actions_CanNext) == 0x000090, "Member 'People_Job_BTT_C_UpdatePath::CallFunc_Update_Actions_CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActAnim
// 0x0100 (0x0100 - 0x0000)
struct People_Job_BTT_C_ActAnim final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Anim*                     JobActionAnim;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfGeneralMotionAsset*                 K2Node_DynamicCast_AsSnf_General_Motion_Asset;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_KappaAnim*                K2Node_DynamicCast_AsKappa_Anim;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_Array_Get_Item;                           // 0x0088(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_1;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesStopAnimPlying_ReturnValue;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadCompleted_ReturnValue;              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayActionAnim_ReturnValue;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CueActionAnimJumpToSection_ReturnValue;   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActAnim) == 0x000010, "Wrong alignment on People_Job_BTT_C_ActAnim");
static_assert(sizeof(People_Job_BTT_C_ActAnim) == 0x000100, "Wrong size on People_Job_BTT_C_ActAnim");
static_assert(offsetof(People_Job_BTT_C_ActAnim, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActAnim::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_ActAnim::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, JobActionAnim) == 0x000010, "Member 'People_Job_BTT_C_ActAnim::JobActionAnim' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, ActionTransform) == 0x000020, "Member 'People_Job_BTT_C_ActAnim::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CanNext) == 0x000050, "Member 'People_Job_BTT_C_ActAnim::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_AsSnf_General_Motion_Asset) == 0x000068, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_AsSnf_General_Motion_Asset' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'People_Job_BTT_C_ActAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_AsKappa_Anim) == 0x000078, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_AsKappa_Anim' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Array_Get_Item) == 0x000088, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000B0, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x0000B8, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000C8, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'People_Job_BTT_C_ActAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_AsAnim_Sequence_Base_1) == 0x0000D8, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_AsAnim_Sequence_Base_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'People_Job_BTT_C_ActAnim::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_DoesStopAnimPlying_ReturnValue) == 0x0000E1, "Member 'People_Job_BTT_C_ActAnim::CallFunc_DoesStopAnimPlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_IsLoadCompleted_ReturnValue) == 0x0000E2, "Member 'People_Job_BTT_C_ActAnim::CallFunc_IsLoadCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E3, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, Temp_int_Variable) == 0x0000E4, "Member 'People_Job_BTT_C_ActAnim::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_IsPlayActionAnim_ReturnValue) == 0x0000E8, "Member 'People_Job_BTT_C_ActAnim::CallFunc_IsPlayActionAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_CueActionAnimJumpToSection_ReturnValue) == 0x0000E9, "Member 'People_Job_BTT_C_ActAnim::CallFunc_CueActionAnimJumpToSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_IsValid_ReturnValue_2) == 0x0000EA, "Member 'People_Job_BTT_C_ActAnim::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'People_Job_BTT_C_ActAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAnim, K2Node_SwitchInteger_CmpSuccess) == 0x0000F0, "Member 'People_Job_BTT_C_ActAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.SubPhaseTurn
// 0x00C0 (0x00C0 - 0x0000)
struct People_Job_BTT_C_SubPhaseTurn final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         PlayRate;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayActionAnim_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayActionAnim_ReturnValue_1;           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_SubPhaseTurn) == 0x000010, "Wrong alignment on People_Job_BTT_C_SubPhaseTurn");
static_assert(sizeof(People_Job_BTT_C_SubPhaseTurn) == 0x0000C0, "Wrong size on People_Job_BTT_C_SubPhaseTurn");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_SubPhaseTurn::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_SubPhaseTurn::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, ActionTransform) == 0x000010, "Member 'People_Job_BTT_C_SubPhaseTurn::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, PlayRate) == 0x000040, "Member 'People_Job_BTT_C_SubPhaseTurn::PlayRate' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CanNext) == 0x000044, "Member 'People_Job_BTT_C_SubPhaseTurn::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakTransform_Location) == 0x000048, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00006C, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_RInterpTo_ReturnValue) == 0x000078, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_IsPlayActionAnim_ReturnValue) == 0x000084, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_IsPlayActionAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000085, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000086, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000088, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_Abs_ReturnValue) == 0x0000B0, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B4, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, CallFunc_IsPlayActionAnim_ReturnValue_1) == 0x0000B5, "Member 'People_Job_BTT_C_SubPhaseTurn::CallFunc_IsPlayActionAnim_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, Temp_int_Variable) == 0x0000B8, "Member 'People_Job_BTT_C_SubPhaseTurn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseTurn, K2Node_SwitchInteger_CmpSuccess) == 0x0000BC, "Member 'People_Job_BTT_C_SubPhaseTurn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.SubPhaseWait
// 0x0078 (0x0078 - 0x0000)
struct People_Job_BTT_C_SubPhaseWait final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATngCharacter*                          K2Node_DynamicCast_AsTng_Character;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITngCharacterMovementInterface> CallFunc_SetDriveInputMaxSpeed_self_CastInput;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITngCharacterMovementInterface> CallFunc_GetDriveInputMaxSpeed_self_CastInput;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDriveInputMaxSpeed_ReturnValue;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITngCharacterMovementInterface> CallFunc_SetDriveInputMaxSpeed_self_CastInput_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_SubPhaseWait) == 0x000008, "Wrong alignment on People_Job_BTT_C_SubPhaseWait");
static_assert(sizeof(People_Job_BTT_C_SubPhaseWait) == 0x000078, "Wrong size on People_Job_BTT_C_SubPhaseWait");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_SubPhaseWait::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_SubPhaseWait::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, Duration) == 0x00000C, "Member 'People_Job_BTT_C_SubPhaseWait::Duration' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CanNext) == 0x000010, "Member 'People_Job_BTT_C_SubPhaseWait::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, K2Node_DynamicCast_AsTng_Character) == 0x000018, "Member 'People_Job_BTT_C_SubPhaseWait::K2Node_DynamicCast_AsTng_Character' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'People_Job_BTT_C_SubPhaseWait::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_SetDriveInputMaxSpeed_self_CastInput) == 0x000028, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_SetDriveInputMaxSpeed_self_CastInput' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_GetDriveInputMaxSpeed_self_CastInput) == 0x000038, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_GetDriveInputMaxSpeed_self_CastInput' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_GetDriveInputMaxSpeed_ReturnValue) == 0x000048, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_GetDriveInputMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_SetDriveInputMaxSpeed_self_CastInput_1) == 0x000050, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_SetDriveInputMaxSpeed_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, Temp_int_Variable) == 0x000060, "Member 'People_Job_BTT_C_SubPhaseWait::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'People_Job_BTT_C_SubPhaseWait::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_SubPhaseWait, K2Node_SwitchInteger_CmpSuccess) == 0x000070, "Member 'People_Job_BTT_C_SubPhaseWait::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActWait
// 0x0070 (0x0070 - 0x0000)
struct People_Job_BTT_C_ActWait final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Wait*                     JobActionWait;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewLocalVar_0;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsBreak_ElapsedTimeCount;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBreak_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActWait) == 0x000010, "Wrong alignment on People_Job_BTT_C_ActWait");
static_assert(sizeof(People_Job_BTT_C_ActWait) == 0x000070, "Wrong size on People_Job_BTT_C_ActWait");
static_assert(offsetof(People_Job_BTT_C_ActWait, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActWait::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_ActWait::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, JobActionWait) == 0x000010, "Member 'People_Job_BTT_C_ActWait::JobActionWait' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, ActionTransform) == 0x000020, "Member 'People_Job_BTT_C_ActWait::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, CanNext) == 0x000050, "Member 'People_Job_BTT_C_ActWait::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, NewLocalVar_0) == 0x000054, "Member 'People_Job_BTT_C_ActWait::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, CallFunc_IsBreak_ElapsedTimeCount) == 0x000058, "Member 'People_Job_BTT_C_ActWait::CallFunc_IsBreak_ElapsedTimeCount' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, CallFunc_IsBreak_ReturnValue) == 0x00005C, "Member 'People_Job_BTT_C_ActWait::CallFunc_IsBreak_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, Temp_int_Variable) == 0x000060, "Member 'People_Job_BTT_C_ActWait::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'People_Job_BTT_C_ActWait::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActWait, K2Node_SwitchInteger_CmpSuccess) == 0x000068, "Member 'People_Job_BTT_C_ActWait::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActTurn
// 0x0060 (0x0060 - 0x0000)
struct People_Job_BTT_C_ActTurn final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Turn*                     JobActionTurn;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SubPhaseTurn_CanNext;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SubPhaseWait_CanNext;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActTurn) == 0x000010, "Wrong alignment on People_Job_BTT_C_ActTurn");
static_assert(sizeof(People_Job_BTT_C_ActTurn) == 0x000060, "Wrong size on People_Job_BTT_C_ActTurn");
static_assert(offsetof(People_Job_BTT_C_ActTurn, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActTurn::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_ActTurn::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, JobActionTurn) == 0x000010, "Member 'People_Job_BTT_C_ActTurn::JobActionTurn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, ActionTransform) == 0x000020, "Member 'People_Job_BTT_C_ActTurn::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, CanNext) == 0x000050, "Member 'People_Job_BTT_C_ActTurn::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, CallFunc_SubPhaseTurn_CanNext) == 0x000051, "Member 'People_Job_BTT_C_ActTurn::CallFunc_SubPhaseTurn_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, CallFunc_SubPhaseWait_CanNext) == 0x000052, "Member 'People_Job_BTT_C_ActTurn::CallFunc_SubPhaseWait_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, Temp_int_Variable) == 0x000054, "Member 'People_Job_BTT_C_ActTurn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'People_Job_BTT_C_ActTurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTurn, K2Node_SwitchInteger_CmpSuccess) == 0x00005C, "Member 'People_Job_BTT_C_ActTurn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.UpdatePoint
// 0x00F0 (0x00F0 - 0x0000)
struct People_Job_BTT_C_UpdatePoint final
{
public:
	class ASnfAIController_BP_C*                  OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobType*                            JobType;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ActionTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobType_Point*                      K2Node_DynamicCast_AsPoint;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Update_Actions_CanNext;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_UpdatePoint) == 0x000010, "Wrong alignment on People_Job_BTT_C_UpdatePoint");
static_assert(sizeof(People_Job_BTT_C_UpdatePoint) == 0x0000F0, "Wrong size on People_Job_BTT_C_UpdatePoint");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_UpdatePoint::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_UpdatePoint::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, DeltaSeconds) == 0x000010, "Member 'People_Job_BTT_C_UpdatePoint::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, JobType) == 0x000018, "Member 'People_Job_BTT_C_UpdatePoint::JobType' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, ActionTransform) == 0x000020, "Member 'People_Job_BTT_C_UpdatePoint::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, CanNext) == 0x000050, "Member 'People_Job_BTT_C_UpdatePoint::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, Temp_bool_Variable) == 0x000051, "Member 'People_Job_BTT_C_UpdatePoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, K2Node_DynamicCast_AsPoint) == 0x000058, "Member 'People_Job_BTT_C_UpdatePoint::K2Node_DynamicCast_AsPoint' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'People_Job_BTT_C_UpdatePoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'People_Job_BTT_C_UpdatePoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, K2Node_DynamicCast_AsActor) == 0x000070, "Member 'People_Job_BTT_C_UpdatePoint::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'People_Job_BTT_C_UpdatePoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'People_Job_BTT_C_UpdatePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'People_Job_BTT_C_UpdatePoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, K2Node_Select_Default) == 0x0000B0, "Member 'People_Job_BTT_C_UpdatePoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_UpdatePoint, CallFunc_Update_Actions_CanNext) == 0x0000E0, "Member 'People_Job_BTT_C_UpdatePoint::CallFunc_Update_Actions_CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.Update Actions
// 0x0210 (0x0210 - 0x0000)
struct People_Job_BTT_C_Update_Actions final
{
public:
	class ASnfAIController_BP_C*                  OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USnfJobAction*>                  JobActions;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocalVar_1;                                     // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction*                          CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_AdjustTransform*          K2Node_DynamicCast_AsAdjustTransform;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_JobChange*                K2Node_DynamicCast_AsJobChange;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActJobChange_CanNext;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActAdjustTransform_CanNext;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_LookAt*                   K2Node_DynamicCast_AsLookAt;                       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActLookAt_CanNext;                        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Exit*                     K2Node_DynamicCast_AsExit;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActExit_CanNext;                          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_ActivityTag*              K2Node_DynamicCast_AsActivityTag;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActActivityTag_CanNext;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Talk*                     K2Node_DynamicCast_AsTalk;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActTalk_CanNext;                          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Wait*                     K2Node_DynamicCast_AsWait;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActWait_CanNext;                          // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Turn*                     K2Node_DynamicCast_AsTurn;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_Anim*                     K2Node_DynamicCast_AsAnim;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActAnim_CanNext;                          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActTurn_CanNext;                          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_Update_Actions) == 0x000010, "Wrong alignment on People_Job_BTT_C_Update_Actions");
static_assert(sizeof(People_Job_BTT_C_Update_Actions) == 0x000210, "Wrong size on People_Job_BTT_C_Update_Actions");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, OwnerController) == 0x000000, "Member 'People_Job_BTT_C_Update_Actions::OwnerController' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, ControlledPawn) == 0x000008, "Member 'People_Job_BTT_C_Update_Actions::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, DeltaSeconds) == 0x000010, "Member 'People_Job_BTT_C_Update_Actions::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, JobActions) == 0x000018, "Member 'People_Job_BTT_C_Update_Actions::JobActions' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, ActionTransform) == 0x000030, "Member 'People_Job_BTT_C_Update_Actions::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CanNext) == 0x000060, "Member 'People_Job_BTT_C_Update_Actions::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, NewLocalVar_1) == 0x000064, "Member 'People_Job_BTT_C_Update_Actions::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Location) == 0x000070, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Location_1) == 0x000094, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Rotation_1) == 0x0000A0, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_BreakTransform_Scale_1) == 0x0000AC, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, Temp_int_Variable) == 0x0000C8, "Member 'People_Job_BTT_C_Update_Actions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsAdjustTransform) == 0x0000E0, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsAdjustTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsJobChange) == 0x0000F0, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsJobChange' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ComposeRotators_ReturnValue) == 0x0000FC, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActJobChange_CanNext) == 0x000108, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActJobChange_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActAdjustTransform_CanNext) == 0x000140, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActAdjustTransform_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsLookAt) == 0x000148, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsLookAt' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActLookAt_CanNext) == 0x000151, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActLookAt_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsExit) == 0x000158, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsExit' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_3) == 0x000160, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActExit_CanNext) == 0x000161, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActExit_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsActivityTag) == 0x000168, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsActivityTag' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_4) == 0x000170, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActActivityTag_CanNext) == 0x000171, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActActivityTag_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsTalk) == 0x000178, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsTalk' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_5) == 0x000180, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActTalk_CanNext) == 0x000181, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActTalk_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsWait) == 0x000188, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsWait' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_6) == 0x000190, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActWait_CanNext) == 0x000191, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActWait_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsTurn) == 0x000198, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsTurn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_7) == 0x0001A0, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_AsAnim) == 0x0001A8, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_AsAnim' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, K2Node_DynamicCast_bSuccess_8) == 0x0001B0, "Member 'People_Job_BTT_C_Update_Actions::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ComposeRotators_ReturnValue_1) == 0x0001B4, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActAnim_CanNext) == 0x0001C0, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActAnim_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_MakeTransform_ReturnValue_1) == 0x0001D0, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Update_Actions, CallFunc_ActTurn_CanNext) == 0x000200, "Member 'People_Job_BTT_C_Update_Actions::CallFunc_ActTurn_CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActTalk
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ActTalk final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobAction_Talk*                     JobActionTalk;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActTalk) == 0x000008, "Wrong alignment on People_Job_BTT_C_ActTalk");
static_assert(sizeof(People_Job_BTT_C_ActTalk) == 0x000018, "Wrong size on People_Job_BTT_C_ActTalk");
static_assert(offsetof(People_Job_BTT_C_ActTalk, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActTalk::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTalk, JobActionTalk) == 0x000008, "Member 'People_Job_BTT_C_ActTalk::JobActionTalk' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActTalk, CanNext) == 0x000010, "Member 'People_Job_BTT_C_ActTalk::CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActActivityTag
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ActActivityTag final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobAction_ActivityTag*              JobActionActivityTag;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TaggingTo_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActActivityTag) == 0x000008, "Wrong alignment on People_Job_BTT_C_ActActivityTag");
static_assert(sizeof(People_Job_BTT_C_ActActivityTag) == 0x000018, "Wrong size on People_Job_BTT_C_ActActivityTag");
static_assert(offsetof(People_Job_BTT_C_ActActivityTag, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActActivityTag::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActActivityTag, JobActionActivityTag) == 0x000008, "Member 'People_Job_BTT_C_ActActivityTag::JobActionActivityTag' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActActivityTag, CanNext) == 0x000010, "Member 'People_Job_BTT_C_ActActivityTag::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActActivityTag, CallFunc_TaggingTo_ReturnValue) == 0x000011, "Member 'People_Job_BTT_C_ActActivityTag::CallFunc_TaggingTo_ReturnValue' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActExit
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ActExit final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobAction_Exit*                     JobActionExit;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeExit_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActExit) == 0x000008, "Wrong alignment on People_Job_BTT_C_ActExit");
static_assert(sizeof(People_Job_BTT_C_ActExit) == 0x000018, "Wrong size on People_Job_BTT_C_ActExit");
static_assert(offsetof(People_Job_BTT_C_ActExit, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActExit::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActExit, JobActionExit) == 0x000008, "Member 'People_Job_BTT_C_ActExit::JobActionExit' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActExit, CanNext) == 0x000010, "Member 'People_Job_BTT_C_ActExit::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActExit, CallFunc_InvokeExit_ReturnValue) == 0x000011, "Member 'People_Job_BTT_C_ActExit::CallFunc_InvokeExit_ReturnValue' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActLookAt
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ActLookAt final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobAction_LookAt*                   JobActionLookAt;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActLookAt) == 0x000008, "Wrong alignment on People_Job_BTT_C_ActLookAt");
static_assert(sizeof(People_Job_BTT_C_ActLookAt) == 0x000018, "Wrong size on People_Job_BTT_C_ActLookAt");
static_assert(offsetof(People_Job_BTT_C_ActLookAt, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActLookAt::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActLookAt, JobActionLookAt) == 0x000008, "Member 'People_Job_BTT_C_ActLookAt::JobActionLookAt' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActLookAt, CanNext) == 0x000010, "Member 'People_Job_BTT_C_ActLookAt::CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActJobChange
// 0x0018 (0x0018 - 0x0000)
struct People_Job_BTT_C_ActJobChange final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USnfJobAction_JobChange*                JobActionJobChange;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanNext;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActJobChange) == 0x000008, "Wrong alignment on People_Job_BTT_C_ActJobChange");
static_assert(sizeof(People_Job_BTT_C_ActJobChange) == 0x000018, "Wrong size on People_Job_BTT_C_ActJobChange");
static_assert(offsetof(People_Job_BTT_C_ActJobChange, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActJobChange::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActJobChange, JobActionJobChange) == 0x000008, "Member 'People_Job_BTT_C_ActJobChange::JobActionJobChange' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActJobChange, CanNext) == 0x000010, "Member 'People_Job_BTT_C_ActJobChange::CanNext' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.AdjustTransform
// 0x01D0 (0x01D0 - 0x0000)
struct People_Job_BTT_C_AdjustTransform final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          AdjustLocation;                                    // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AdjustRotation;                                    // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsComplete;                                        // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0xD];                                       // 0x0043(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0134(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_AdjustTransform) == 0x000010, "Wrong alignment on People_Job_BTT_C_AdjustTransform");
static_assert(sizeof(People_Job_BTT_C_AdjustTransform) == 0x0001D0, "Wrong size on People_Job_BTT_C_AdjustTransform");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_AdjustTransform::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_AdjustTransform::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, TargetTransform) == 0x000010, "Member 'People_Job_BTT_C_AdjustTransform::TargetTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, AdjustLocation) == 0x000040, "Member 'People_Job_BTT_C_AdjustTransform::AdjustLocation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, AdjustRotation) == 0x000041, "Member 'People_Job_BTT_C_AdjustTransform::AdjustRotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, IsComplete) == 0x000042, "Member 'People_Job_BTT_C_AdjustTransform::IsComplete' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Location) == 0x000084, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Scale) == 0x00009C, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_X) == 0x0000A8, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B4, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Location_1) == 0x0000B8, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Rotation_1) == 0x0000C4, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakTransform_Scale_1) == 0x0000D0, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_X_1) == 0x0000DC, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakVector_Z_1) == 0x0000E4, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000E8, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakRotator_Roll) == 0x000100, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakRotator_Pitch) == 0x000104, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BreakRotator_Yaw) == 0x000108, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00010C, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000118, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_VSize_ReturnValue) == 0x00011C, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BooleanOR_ReturnValue) == 0x000120, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000121, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_VInterpTo_ReturnValue) == 0x000124, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BooleanOR_ReturnValue_1) == 0x000130, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000134, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001BC, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_BooleanAND_ReturnValue) == 0x0001BD, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_RInterpTo_ReturnValue) == 0x0001C0, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_AdjustTransform, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001CC, "Member 'People_Job_BTT_C_AdjustTransform::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.ActAdjustTransform
// 0x00F0 (0x00F0 - 0x0000)
struct People_Job_BTT_C_ActAdjustTransform final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnfJobAction_AdjustTransform*          JobActionAdjustTransform;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActionTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorTransform;                                    // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Sub_Phase_Adjust_Transform_CanNext;       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_ActAdjustTransform) == 0x000010, "Wrong alignment on People_Job_BTT_C_ActAdjustTransform");
static_assert(sizeof(People_Job_BTT_C_ActAdjustTransform) == 0x0000F0, "Wrong size on People_Job_BTT_C_ActAdjustTransform");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_ActAdjustTransform::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_ActAdjustTransform::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, JobActionAdjustTransform) == 0x000010, "Member 'People_Job_BTT_C_ActAdjustTransform::JobActionAdjustTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, ActionTransform) == 0x000020, "Member 'People_Job_BTT_C_ActAdjustTransform::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CanNext) == 0x000050, "Member 'People_Job_BTT_C_ActAdjustTransform::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, ActorTransform) == 0x000060, "Member 'People_Job_BTT_C_ActAdjustTransform::ActorTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, Temp_int_Variable) == 0x000090, "Member 'People_Job_BTT_C_ActAdjustTransform::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000098, "Member 'People_Job_BTT_C_ActAdjustTransform::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, K2Node_DynamicCast_AsActor) == 0x0000A0, "Member 'People_Job_BTT_C_ActAdjustTransform::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'People_Job_BTT_C_ActAdjustTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'People_Job_BTT_C_ActAdjustTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CallFunc_Sub_Phase_Adjust_Transform_CanNext) == 0x0000AA, "Member 'People_Job_BTT_C_ActAdjustTransform::CallFunc_Sub_Phase_Adjust_Transform_CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'People_Job_BTT_C_ActAdjustTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'People_Job_BTT_C_ActAdjustTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_ActAdjustTransform, K2Node_SwitchInteger_CmpSuccess) == 0x0000E4, "Member 'People_Job_BTT_C_ActAdjustTransform::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function People_Job_BTT.People_Job_BTT_C.Sub Phase Adjust Transform
// 0x0250 (0x0250 - 0x0000)
struct People_Job_BTT_C_Sub_Phase_Adjust_Transform final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpDuration;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ActionTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          AdjustLocation;                                    // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AdjustRotation;                                    // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanNext;                                           // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x01B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(People_Job_BTT_C_Sub_Phase_Adjust_Transform) == 0x000010, "Wrong alignment on People_Job_BTT_C_Sub_Phase_Adjust_Transform");
static_assert(sizeof(People_Job_BTT_C_Sub_Phase_Adjust_Transform) == 0x000250, "Wrong size on People_Job_BTT_C_Sub_Phase_Adjust_Transform");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, ControlledPawn) == 0x000000, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::ControlledPawn' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, DeltaSeconds) == 0x000008, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, InterpDuration) == 0x00000C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::InterpDuration' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, ActionTransform) == 0x000010, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::ActionTransform' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, AdjustLocation) == 0x000040, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::AdjustLocation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, AdjustRotation) == 0x000041, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::AdjustRotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CanNext) == 0x000042, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CanNext' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Location) == 0x000044, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000069, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_X) == 0x00006C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_Y) == 0x000070, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_Z) == 0x000074, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D4, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_X_1) == 0x0000DC, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_BreakVector_Z_1) == 0x0000E4, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000F4, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00017C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, Temp_int_Variable) == 0x000180, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000184, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00018C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Square_ReturnValue) == 0x000190, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000194, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, K2Node_SwitchInteger_CmpSuccess) == 0x000198, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_FClamp_ReturnValue) == 0x00019C, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_VLerp_ReturnValue) == 0x0001A0, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_RLerp_ReturnValue) == 0x0001AC, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0001B8, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000240, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(People_Job_BTT_C_Sub_Phase_Adjust_Transform, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000241, "Member 'People_Job_BTT_C_Sub_Phase_Adjust_Transform::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");

}

