#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TangoSoundUtility

#include "Basic.hpp"

#include "TangoSoundUtility_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TangoSoundUtility.AkCandidateComponent.SetAllPositions
// 0x0010 (0x0010 - 0x0000)
struct AkCandidateComponent_SetAllPositions final
{
public:
	TArray<struct FTngSoundCandidatePointInfo>    Positions;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkCandidateComponent_SetAllPositions) == 0x000008, "Wrong alignment on AkCandidateComponent_SetAllPositions");
static_assert(sizeof(AkCandidateComponent_SetAllPositions) == 0x000010, "Wrong size on AkCandidateComponent_SetAllPositions");
static_assert(offsetof(AkCandidateComponent_SetAllPositions, Positions) == 0x000000, "Member 'AkCandidateComponent_SetAllPositions::Positions' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.AddQueue
// 0x0020 (0x0020 - 0x0000)
struct AkDynamicDialogueComponent_AddQueue final
{
public:
	class UAkDynamicDialogueEvent*                In_AkEvent;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         In_Args;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         DelayTimeMs;                                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_AddQueue) == 0x000008, "Wrong alignment on AkDynamicDialogueComponent_AddQueue");
static_assert(sizeof(AkDynamicDialogueComponent_AddQueue) == 0x000020, "Wrong size on AkDynamicDialogueComponent_AddQueue");
static_assert(offsetof(AkDynamicDialogueComponent_AddQueue, In_AkEvent) == 0x000000, "Member 'AkDynamicDialogueComponent_AddQueue::In_AkEvent' has a wrong offset!");
static_assert(offsetof(AkDynamicDialogueComponent_AddQueue, In_Args) == 0x000008, "Member 'AkDynamicDialogueComponent_AddQueue::In_Args' has a wrong offset!");
static_assert(offsetof(AkDynamicDialogueComponent_AddQueue, DelayTimeMs) == 0x000018, "Member 'AkDynamicDialogueComponent_AddQueue::DelayTimeMs' has a wrong offset!");
static_assert(offsetof(AkDynamicDialogueComponent_AddQueue, ReturnValue) == 0x00001C, "Member 'AkDynamicDialogueComponent_AddQueue::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.GetAllItems
// 0x0010 (0x0010 - 0x0000)
struct AkDynamicDialogueComponent_GetAllItems final
{
public:
	TArray<struct FAkDynamicDialogueNodeInfo>     Items;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_GetAllItems) == 0x000008, "Wrong alignment on AkDynamicDialogueComponent_GetAllItems");
static_assert(sizeof(AkDynamicDialogueComponent_GetAllItems) == 0x000010, "Wrong size on AkDynamicDialogueComponent_GetAllItems");
static_assert(offsetof(AkDynamicDialogueComponent_GetAllItems, Items) == 0x000000, "Member 'AkDynamicDialogueComponent_GetAllItems::Items' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.GetPauseTimes
// 0x0008 (0x0008 - 0x0000)
struct AkDynamicDialogueComponent_GetPauseTimes final
{
public:
	int32                                         Out_TimeMs;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Out_Duration;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_GetPauseTimes) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_GetPauseTimes");
static_assert(sizeof(AkDynamicDialogueComponent_GetPauseTimes) == 0x000008, "Wrong size on AkDynamicDialogueComponent_GetPauseTimes");
static_assert(offsetof(AkDynamicDialogueComponent_GetPauseTimes, Out_TimeMs) == 0x000000, "Member 'AkDynamicDialogueComponent_GetPauseTimes::Out_TimeMs' has a wrong offset!");
static_assert(offsetof(AkDynamicDialogueComponent_GetPauseTimes, Out_Duration) == 0x000004, "Member 'AkDynamicDialogueComponent_GetPauseTimes::Out_Duration' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.GetPlayingItem
// 0x0018 (0x0018 - 0x0000)
struct AkDynamicDialogueComponent_GetPlayingItem final
{
public:
	struct FAkDynamicDialogueNodeInfo             Item;                                              // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_GetPlayingItem) == 0x000008, "Wrong alignment on AkDynamicDialogueComponent_GetPlayingItem");
static_assert(sizeof(AkDynamicDialogueComponent_GetPlayingItem) == 0x000018, "Wrong size on AkDynamicDialogueComponent_GetPlayingItem");
static_assert(offsetof(AkDynamicDialogueComponent_GetPlayingItem, Item) == 0x000000, "Member 'AkDynamicDialogueComponent_GetPlayingItem::Item' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.PauseQueue
// 0x0004 (0x0004 - 0x0000)
struct AkDynamicDialogueComponent_PauseQueue final
{
public:
	int32                                         FadeTimeMs;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_PauseQueue) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_PauseQueue");
static_assert(sizeof(AkDynamicDialogueComponent_PauseQueue) == 0x000004, "Wrong size on AkDynamicDialogueComponent_PauseQueue");
static_assert(offsetof(AkDynamicDialogueComponent_PauseQueue, FadeTimeMs) == 0x000000, "Member 'AkDynamicDialogueComponent_PauseQueue::FadeTimeMs' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.PlayQueue
// 0x0004 (0x0004 - 0x0000)
struct AkDynamicDialogueComponent_PlayQueue final
{
public:
	int32                                         FadeTimeMs;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_PlayQueue) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_PlayQueue");
static_assert(sizeof(AkDynamicDialogueComponent_PlayQueue) == 0x000004, "Wrong size on AkDynamicDialogueComponent_PlayQueue");
static_assert(offsetof(AkDynamicDialogueComponent_PlayQueue, FadeTimeMs) == 0x000000, "Member 'AkDynamicDialogueComponent_PlayQueue::FadeTimeMs' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.RemoveQueue
// 0x0004 (0x0004 - 0x0000)
struct AkDynamicDialogueComponent_RemoveQueue final
{
public:
	int32                                         NodeID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_RemoveQueue) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_RemoveQueue");
static_assert(sizeof(AkDynamicDialogueComponent_RemoveQueue) == 0x000004, "Wrong size on AkDynamicDialogueComponent_RemoveQueue");
static_assert(offsetof(AkDynamicDialogueComponent_RemoveQueue, NodeID) == 0x000000, "Member 'AkDynamicDialogueComponent_RemoveQueue::NodeID' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.ResumeQueue
// 0x0004 (0x0004 - 0x0000)
struct AkDynamicDialogueComponent_ResumeQueue final
{
public:
	int32                                         FadeTimeMs;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_ResumeQueue) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_ResumeQueue");
static_assert(sizeof(AkDynamicDialogueComponent_ResumeQueue) == 0x000004, "Wrong size on AkDynamicDialogueComponent_ResumeQueue");
static_assert(offsetof(AkDynamicDialogueComponent_ResumeQueue, FadeTimeMs) == 0x000000, "Member 'AkDynamicDialogueComponent_ResumeQueue::FadeTimeMs' has a wrong offset!");

// Function TangoSoundUtility.AkDynamicDialogueComponent.StopQueue
// 0x0004 (0x0004 - 0x0000)
struct AkDynamicDialogueComponent_StopQueue final
{
public:
	int32                                         FadeTimeMs;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkDynamicDialogueComponent_StopQueue) == 0x000004, "Wrong alignment on AkDynamicDialogueComponent_StopQueue");
static_assert(sizeof(AkDynamicDialogueComponent_StopQueue) == 0x000004, "Wrong size on AkDynamicDialogueComponent_StopQueue");
static_assert(offsetof(AkDynamicDialogueComponent_StopQueue, FadeTimeMs) == 0x000000, "Member 'AkDynamicDialogueComponent_StopQueue::FadeTimeMs' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.CheckOutFiles
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_CheckOutFiles final
{
public:
	TArray<class FString>                         FullFilePaths;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_CheckOutFiles) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_CheckOutFiles");
static_assert(sizeof(TngSoundGameplayStatics_CheckOutFiles) == 0x000018, "Wrong size on TngSoundGameplayStatics_CheckOutFiles");
static_assert(offsetof(TngSoundGameplayStatics_CheckOutFiles, FullFilePaths) == 0x000000, "Member 'TngSoundGameplayStatics_CheckOutFiles::FullFilePaths' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CheckOutFiles, ReturnValue) == 0x000010, "Member 'TngSoundGameplayStatics_CheckOutFiles::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.CreateGoogleTTSWavFile
// 0x0038 (0x0038 - 0x0000)
struct TngSoundGameplayStatics_CreateGoogleTTSWavFile final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSSML;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutputFile;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETngSoundGoogleTTSVoiceName                   VoiceName;                                         // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Pitch;                                             // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rate;                                              // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSync;                                             // 0x0034(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_CreateGoogleTTSWavFile) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_CreateGoogleTTSWavFile");
static_assert(sizeof(TngSoundGameplayStatics_CreateGoogleTTSWavFile) == 0x000038, "Wrong size on TngSoundGameplayStatics_CreateGoogleTTSWavFile");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, Text) == 0x000000, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::Text' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, bSSML) == 0x000010, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::bSSML' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, OutputFile) == 0x000018, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::OutputFile' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, VoiceName) == 0x000028, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::VoiceName' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, Pitch) == 0x00002C, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::Pitch' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, Rate) == 0x000030, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::Rate' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_CreateGoogleTTSWavFile, bSync) == 0x000034, "Member 'TngSoundGameplayStatics_CreateGoogleTTSWavFile::bSync' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetDefaultECollisionChannelForFX
// 0x0001 (0x0001 - 0x0000)
struct TngSoundGameplayStatics_GetDefaultECollisionChannelForFX final
{
public:
	ECollisionChannel                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundGameplayStatics_GetDefaultECollisionChannelForFX) == 0x000001, "Wrong alignment on TngSoundGameplayStatics_GetDefaultECollisionChannelForFX");
static_assert(sizeof(TngSoundGameplayStatics_GetDefaultECollisionChannelForFX) == 0x000001, "Wrong size on TngSoundGameplayStatics_GetDefaultECollisionChannelForFX");
static_assert(offsetof(TngSoundGameplayStatics_GetDefaultECollisionChannelForFX, ReturnValue) == 0x000000, "Member 'TngSoundGameplayStatics_GetDefaultECollisionChannelForFX::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetProceduralCanInfo
// 0x0038 (0x0038 - 0x0000)
struct TngSoundGameplayStatics_GetProceduralCanInfo final
{
public:
	TArray<struct FProcCSSpawnInfo>               CSInfos;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FProcCPSpawnInfo>               CPInfos;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 FullFilePath;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCullingVolume;                              // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundGameplayStatics_GetProceduralCanInfo) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_GetProceduralCanInfo");
static_assert(sizeof(TngSoundGameplayStatics_GetProceduralCanInfo) == 0x000038, "Wrong size on TngSoundGameplayStatics_GetProceduralCanInfo");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralCanInfo, CSInfos) == 0x000000, "Member 'TngSoundGameplayStatics_GetProceduralCanInfo::CSInfos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralCanInfo, CPInfos) == 0x000010, "Member 'TngSoundGameplayStatics_GetProceduralCanInfo::CPInfos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralCanInfo, FullFilePath) == 0x000020, "Member 'TngSoundGameplayStatics_GetProceduralCanInfo::FullFilePath' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralCanInfo, bEnableCullingVolume) == 0x000030, "Member 'TngSoundGameplayStatics_GetProceduralCanInfo::bEnableCullingVolume' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralCanInfo, ReturnValue) == 0x000034, "Member 'TngSoundGameplayStatics_GetProceduralCanInfo::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetProceduralMPInfo
// 0x0038 (0x0038 - 0x0000)
struct TngSoundGameplayStatics_GetProceduralMPInfo final
{
public:
	TArray<struct FProcMPLSpawnInfo>              MPLInfos;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FProcMPSSpawnInfo>              MPSInfos;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 FullFilePath;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_GetProceduralMPInfo) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_GetProceduralMPInfo");
static_assert(sizeof(TngSoundGameplayStatics_GetProceduralMPInfo) == 0x000038, "Wrong size on TngSoundGameplayStatics_GetProceduralMPInfo");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralMPInfo, MPLInfos) == 0x000000, "Member 'TngSoundGameplayStatics_GetProceduralMPInfo::MPLInfos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralMPInfo, MPSInfos) == 0x000010, "Member 'TngSoundGameplayStatics_GetProceduralMPInfo::MPSInfos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralMPInfo, FullFilePath) == 0x000020, "Member 'TngSoundGameplayStatics_GetProceduralMPInfo::FullFilePath' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralMPInfo, ReturnValue) == 0x000030, "Member 'TngSoundGameplayStatics_GetProceduralMPInfo::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetProceduralPortalInfo
// 0x0028 (0x0028 - 0x0000)
struct TngSoundGameplayStatics_GetProceduralPortalInfo final
{
public:
	TArray<struct FProcPortalSpawnInfo>           Infos;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 FullFilePath;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_GetProceduralPortalInfo) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_GetProceduralPortalInfo");
static_assert(sizeof(TngSoundGameplayStatics_GetProceduralPortalInfo) == 0x000028, "Wrong size on TngSoundGameplayStatics_GetProceduralPortalInfo");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralPortalInfo, Infos) == 0x000000, "Member 'TngSoundGameplayStatics_GetProceduralPortalInfo::Infos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralPortalInfo, FullFilePath) == 0x000010, "Member 'TngSoundGameplayStatics_GetProceduralPortalInfo::FullFilePath' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralPortalInfo, ReturnValue) == 0x000020, "Member 'TngSoundGameplayStatics_GetProceduralPortalInfo::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetProceduralSAVInfo
// 0x0028 (0x0028 - 0x0000)
struct TngSoundGameplayStatics_GetProceduralSAVInfo final
{
public:
	TArray<struct FProcSAVSpawnInfo>              Infos;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 FullFilePath;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_GetProceduralSAVInfo) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_GetProceduralSAVInfo");
static_assert(sizeof(TngSoundGameplayStatics_GetProceduralSAVInfo) == 0x000028, "Wrong size on TngSoundGameplayStatics_GetProceduralSAVInfo");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSAVInfo, Infos) == 0x000000, "Member 'TngSoundGameplayStatics_GetProceduralSAVInfo::Infos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSAVInfo, FullFilePath) == 0x000010, "Member 'TngSoundGameplayStatics_GetProceduralSAVInfo::FullFilePath' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSAVInfo, ReturnValue) == 0x000020, "Member 'TngSoundGameplayStatics_GetProceduralSAVInfo::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetProceduralSPSP2Info
// 0x0028 (0x0028 - 0x0000)
struct TngSoundGameplayStatics_GetProceduralSPSP2Info final
{
public:
	TArray<struct FProcSPSP2SpawnInfo>            Infos;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 FullFilePath;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_GetProceduralSPSP2Info) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_GetProceduralSPSP2Info");
static_assert(sizeof(TngSoundGameplayStatics_GetProceduralSPSP2Info) == 0x000028, "Wrong size on TngSoundGameplayStatics_GetProceduralSPSP2Info");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSPSP2Info, Infos) == 0x000000, "Member 'TngSoundGameplayStatics_GetProceduralSPSP2Info::Infos' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSPSP2Info, FullFilePath) == 0x000010, "Member 'TngSoundGameplayStatics_GetProceduralSPSP2Info::FullFilePath' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetProceduralSPSP2Info, ReturnValue) == 0x000020, "Member 'TngSoundGameplayStatics_GetProceduralSPSP2Info::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.GetSpatialAudioListenerPosition
// 0x0024 (0x0024 - 0x0000)
struct TngSoundGameplayStatics_GetSpatialAudioListenerPosition final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Front;                                             // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Right;                                             // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundGameplayStatics_GetSpatialAudioListenerPosition) == 0x000004, "Wrong alignment on TngSoundGameplayStatics_GetSpatialAudioListenerPosition");
static_assert(sizeof(TngSoundGameplayStatics_GetSpatialAudioListenerPosition) == 0x000024, "Wrong size on TngSoundGameplayStatics_GetSpatialAudioListenerPosition");
static_assert(offsetof(TngSoundGameplayStatics_GetSpatialAudioListenerPosition, Position) == 0x000000, "Member 'TngSoundGameplayStatics_GetSpatialAudioListenerPosition::Position' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetSpatialAudioListenerPosition, Front) == 0x00000C, "Member 'TngSoundGameplayStatics_GetSpatialAudioListenerPosition::Front' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_GetSpatialAudioListenerPosition, Right) == 0x000018, "Member 'TngSoundGameplayStatics_GetSpatialAudioListenerPosition::Right' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.PlayFile
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_PlayFile final
{
public:
	class FString                                 FilePathWithExtension;                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_PlayFile) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_PlayFile");
static_assert(sizeof(TngSoundGameplayStatics_PlayFile) == 0x000018, "Wrong size on TngSoundGameplayStatics_PlayFile");
static_assert(offsetof(TngSoundGameplayStatics_PlayFile, FilePathWithExtension) == 0x000000, "Member 'TngSoundGameplayStatics_PlayFile::FilePathWithExtension' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_PlayFile, ReturnValue) == 0x000010, "Member 'TngSoundGameplayStatics_PlayFile::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.PostMessageOnSlackChannel
// 0x0030 (0x0030 - 0x0000)
struct TngSoundGameplayStatics_PostMessageOnSlackChannel final
{
public:
	class FString                                 Channel;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundGameplayStatics_PostMessageOnSlackChannel) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_PostMessageOnSlackChannel");
static_assert(sizeof(TngSoundGameplayStatics_PostMessageOnSlackChannel) == 0x000030, "Wrong size on TngSoundGameplayStatics_PostMessageOnSlackChannel");
static_assert(offsetof(TngSoundGameplayStatics_PostMessageOnSlackChannel, Channel) == 0x000000, "Member 'TngSoundGameplayStatics_PostMessageOnSlackChannel::Channel' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_PostMessageOnSlackChannel, UserName) == 0x000010, "Member 'TngSoundGameplayStatics_PostMessageOnSlackChannel::UserName' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_PostMessageOnSlackChannel, Message) == 0x000020, "Member 'TngSoundGameplayStatics_PostMessageOnSlackChannel::Message' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.ProceduralSAVsAndPortalsWithName
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName");
static_assert(sizeof(TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName) == 0x000018, "Wrong size on TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName, Name_0) == 0x000000, "Member 'TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName::Name_0' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName, ReturnValue) == 0x000010, "Member 'TngSoundGameplayStatics_ProceduralSAVsAndPortalsWithName::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.ProceduralSourcesWithName
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_ProceduralSourcesWithName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_ProceduralSourcesWithName) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_ProceduralSourcesWithName");
static_assert(sizeof(TngSoundGameplayStatics_ProceduralSourcesWithName) == 0x000018, "Wrong size on TngSoundGameplayStatics_ProceduralSourcesWithName");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralSourcesWithName, Name_0) == 0x000000, "Member 'TngSoundGameplayStatics_ProceduralSourcesWithName::Name_0' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralSourcesWithName, ReturnValue) == 0x000010, "Member 'TngSoundGameplayStatics_ProceduralSourcesWithName::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.ProceduralWithName
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_ProceduralWithName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_ProceduralWithName) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_ProceduralWithName");
static_assert(sizeof(TngSoundGameplayStatics_ProceduralWithName) == 0x000018, "Wrong size on TngSoundGameplayStatics_ProceduralWithName");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralWithName, Name_0) == 0x000000, "Member 'TngSoundGameplayStatics_ProceduralWithName::Name_0' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_ProceduralWithName, ReturnValue) == 0x000010, "Member 'TngSoundGameplayStatics_ProceduralWithName::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.SetFrontAndBackRoomToSpecificWorldsPortals
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FullfilePathForDebug;                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals");
static_assert(sizeof(TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals) == 0x000018, "Wrong size on TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals");
static_assert(offsetof(TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals, World) == 0x000000, "Member 'TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals::World' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals, FullfilePathForDebug) == 0x000008, "Member 'TngSoundGameplayStatics_SetFrontAndBackRoomToSpecificWorldsPortals::FullfilePathForDebug' has a wrong offset!");

// Function TangoSoundUtility.TngSoundGameplayStatics.SetStreamingDistance
// 0x0018 (0x0018 - 0x0000)
struct TngSoundGameplayStatics_SetStreamingDistance final
{
public:
	class FString                                 UmapName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETngSoundAssignToLayer                        AssignToLayer;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TngSoundGameplayStatics_SetStreamingDistance) == 0x000008, "Wrong alignment on TngSoundGameplayStatics_SetStreamingDistance");
static_assert(sizeof(TngSoundGameplayStatics_SetStreamingDistance) == 0x000018, "Wrong size on TngSoundGameplayStatics_SetStreamingDistance");
static_assert(offsetof(TngSoundGameplayStatics_SetStreamingDistance, UmapName) == 0x000000, "Member 'TngSoundGameplayStatics_SetStreamingDistance::UmapName' has a wrong offset!");
static_assert(offsetof(TngSoundGameplayStatics_SetStreamingDistance, AssignToLayer) == 0x000010, "Member 'TngSoundGameplayStatics_SetStreamingDistance::AssignToLayer' has a wrong offset!");

// Function TangoSoundUtility.AkLinearSpeakerComponent.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct AkLinearSpeakerComponent_SetEnable final
{
public:
	bool                                          SoundPlay;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkLinearSpeakerComponent_SetEnable) == 0x000001, "Wrong alignment on AkLinearSpeakerComponent_SetEnable");
static_assert(sizeof(AkLinearSpeakerComponent_SetEnable) == 0x000001, "Wrong size on AkLinearSpeakerComponent_SetEnable");
static_assert(offsetof(AkLinearSpeakerComponent_SetEnable, SoundPlay) == 0x000000, "Member 'AkLinearSpeakerComponent_SetEnable::SoundPlay' has a wrong offset!");

// Function TangoSoundUtility.AkRailSpeakerComponent.Stop
// 0x0004 (0x0004 - 0x0000)
struct AkRailSpeakerComponent_Stop final
{
public:
	int32                                         FadeTimeMs;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkRailSpeakerComponent_Stop) == 0x000004, "Wrong alignment on AkRailSpeakerComponent_Stop");
static_assert(sizeof(AkRailSpeakerComponent_Stop) == 0x000004, "Wrong size on AkRailSpeakerComponent_Stop");
static_assert(offsetof(AkRailSpeakerComponent_Stop, FadeTimeMs) == 0x000000, "Member 'AkRailSpeakerComponent_Stop::FadeTimeMs' has a wrong offset!");

// Function TangoSoundUtility.AkMPSComponent.AddMPL
// 0x0008 (0x0008 - 0x0000)
struct AkMPSComponent_AddMPL final
{
public:
	class UAkMPLComponent*                        Cmp;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkMPSComponent_AddMPL) == 0x000008, "Wrong alignment on AkMPSComponent_AddMPL");
static_assert(sizeof(AkMPSComponent_AddMPL) == 0x000008, "Wrong size on AkMPSComponent_AddMPL");
static_assert(offsetof(AkMPSComponent_AddMPL, Cmp) == 0x000000, "Member 'AkMPSComponent_AddMPL::Cmp' has a wrong offset!");

// Function TangoSoundUtility.AkMPSComponent.EndOfEvent
// 0x0010 (0x0010 - 0x0000)
struct AkMPSComponent_EndOfEvent final
{
public:
	EAkCallbackType                               CallbackType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkCallbackInfo*                        CallbackInfo;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkMPSComponent_EndOfEvent) == 0x000008, "Wrong alignment on AkMPSComponent_EndOfEvent");
static_assert(sizeof(AkMPSComponent_EndOfEvent) == 0x000010, "Wrong size on AkMPSComponent_EndOfEvent");
static_assert(offsetof(AkMPSComponent_EndOfEvent, CallbackType) == 0x000000, "Member 'AkMPSComponent_EndOfEvent::CallbackType' has a wrong offset!");
static_assert(offsetof(AkMPSComponent_EndOfEvent, CallbackInfo) == 0x000008, "Member 'AkMPSComponent_EndOfEvent::CallbackInfo' has a wrong offset!");

// Function TangoSoundUtility.TngSoundMusicManagerTestActor.PostAssociatedAkEvent
// 0x0004 (0x0004 - 0x0000)
struct TngSoundMusicManagerTestActor_PostAssociatedAkEvent final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TngSoundMusicManagerTestActor_PostAssociatedAkEvent) == 0x000004, "Wrong alignment on TngSoundMusicManagerTestActor_PostAssociatedAkEvent");
static_assert(sizeof(TngSoundMusicManagerTestActor_PostAssociatedAkEvent) == 0x000004, "Wrong size on TngSoundMusicManagerTestActor_PostAssociatedAkEvent");
static_assert(offsetof(TngSoundMusicManagerTestActor_PostAssociatedAkEvent, ReturnValue) == 0x000000, "Member 'TngSoundMusicManagerTestActor_PostAssociatedAkEvent::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.AkSphereComponent2.AppendAkEvent
// 0x0008 (0x0008 - 0x0000)
struct AkSphereComponent2_AppendAkEvent final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkSphereComponent2_AppendAkEvent) == 0x000008, "Wrong alignment on AkSphereComponent2_AppendAkEvent");
static_assert(sizeof(AkSphereComponent2_AppendAkEvent) == 0x000008, "Wrong size on AkSphereComponent2_AppendAkEvent");
static_assert(offsetof(AkSphereComponent2_AppendAkEvent, Event) == 0x000000, "Member 'AkSphereComponent2_AppendAkEvent::Event' has a wrong offset!");

// Function TangoSoundUtility.AkSphereComponent2.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct AkSphereComponent2_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkSphereComponent2_IsPlaying) == 0x000001, "Wrong alignment on AkSphereComponent2_IsPlaying");
static_assert(sizeof(AkSphereComponent2_IsPlaying) == 0x000001, "Wrong size on AkSphereComponent2_IsPlaying");
static_assert(offsetof(AkSphereComponent2_IsPlaying, ReturnValue) == 0x000000, "Member 'AkSphereComponent2_IsPlaying::ReturnValue' has a wrong offset!");

// Function TangoSoundUtility.AkSphereSpeaker2.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct AkSphereSpeaker2_SetEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AkSphereSpeaker2_SetEnable) == 0x000001, "Wrong alignment on AkSphereSpeaker2_SetEnable");
static_assert(sizeof(AkSphereSpeaker2_SetEnable) == 0x000001, "Wrong size on AkSphereSpeaker2_SetEnable");
static_assert(offsetof(AkSphereSpeaker2_SetEnable, bEnable) == 0x000000, "Member 'AkSphereSpeaker2_SetEnable::bEnable' has a wrong offset!");

}

