#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: People_CheckReact_BTS

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass People_CheckReact_BTS.People_CheckReact_BTS_C
// 0x00D8 (0x0170 - 0x0098)
class UPeople_CheckReact_BTS_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 IsReactDisabledBK;                                 // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 CurrentReactNameBK;                                // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 PlayingReactNameBK;                                // 0x00F0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 ReactActorBK;                                      // 0x0118(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 ReactLocationBK;                                   // 0x0140(0x0028)(Edit, BlueprintVisible)
	class FName                                   CastReactName;                                     // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_People_CheckReact_BTS(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"People_CheckReact_BTS_C">();
	}
	static class UPeople_CheckReact_BTS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPeople_CheckReact_BTS_C>();
	}
};
static_assert(alignof(UPeople_CheckReact_BTS_C) == 0x000008, "Wrong alignment on UPeople_CheckReact_BTS_C");
static_assert(sizeof(UPeople_CheckReact_BTS_C) == 0x000170, "Wrong size on UPeople_CheckReact_BTS_C");
static_assert(offsetof(UPeople_CheckReact_BTS_C, UberGraphFrame) == 0x000098, "Member 'UPeople_CheckReact_BTS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, IsReactDisabledBK) == 0x0000A0, "Member 'UPeople_CheckReact_BTS_C::IsReactDisabledBK' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, CurrentReactNameBK) == 0x0000C8, "Member 'UPeople_CheckReact_BTS_C::CurrentReactNameBK' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, PlayingReactNameBK) == 0x0000F0, "Member 'UPeople_CheckReact_BTS_C::PlayingReactNameBK' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, ReactActorBK) == 0x000118, "Member 'UPeople_CheckReact_BTS_C::ReactActorBK' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, ReactLocationBK) == 0x000140, "Member 'UPeople_CheckReact_BTS_C::ReactLocationBK' has a wrong offset!");
static_assert(offsetof(UPeople_CheckReact_BTS_C, CastReactName) == 0x000168, "Member 'UPeople_CheckReact_BTS_C::CastReactName' has a wrong offset!");

}

