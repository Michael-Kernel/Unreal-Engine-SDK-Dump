#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wp0010_AN

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function wp0010_AN.wp0010_AN_C.ExecuteUbergraph_wp0010_AN
// 0x0030 (0x0030 - 0x0000)
struct Wp0010_AN_C_ExecuteUbergraph_wp0010_AN final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASnfWeapon*                             CallFunc_GetOwnerWeapon_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASnfWeaponBow*                          K2Node_DynamicCast_AsSnf_Weapon_Bow;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Request;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN) == 0x000008, "Wrong alignment on Wp0010_AN_C_ExecuteUbergraph_wp0010_AN");
static_assert(sizeof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN) == 0x000030, "Wrong size on Wp0010_AN_C_ExecuteUbergraph_wp0010_AN");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, EntryPoint) == 0x000000, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, CallFunc_GetOwnerWeapon_ReturnValue) == 0x000008, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::CallFunc_GetOwnerWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, K2Node_DynamicCast_AsSnf_Weapon_Bow) == 0x000010, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::K2Node_DynamicCast_AsSnf_Weapon_Bow' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, K2Node_Event_Request) == 0x00001C, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::K2Node_Event_Request' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, K2Node_SwitchName_CmpSuccess) == 0x000024, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Wp0010_AN_C_ExecuteUbergraph_wp0010_AN, K2Node_Event_DeltaTimeX) == 0x000028, "Member 'Wp0010_AN_C_ExecuteUbergraph_wp0010_AN::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function wp0010_AN.wp0010_AN_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Wp0010_AN_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0010_AN_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Wp0010_AN_C_BlueprintUpdateAnimation");
static_assert(sizeof(Wp0010_AN_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Wp0010_AN_C_BlueprintUpdateAnimation");
static_assert(offsetof(Wp0010_AN_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Wp0010_AN_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function wp0010_AN.wp0010_AN_C.RequestAnim
// 0x0008 (0x0008 - 0x0000)
struct Wp0010_AN_C_RequestAnim final
{
public:
	class FName                                   Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0010_AN_C_RequestAnim) == 0x000004, "Wrong alignment on Wp0010_AN_C_RequestAnim");
static_assert(sizeof(Wp0010_AN_C_RequestAnim) == 0x000008, "Wrong size on Wp0010_AN_C_RequestAnim");
static_assert(offsetof(Wp0010_AN_C_RequestAnim, Request) == 0x000000, "Member 'Wp0010_AN_C_RequestAnim::Request' has a wrong offset!");

// Function wp0010_AN.wp0010_AN_C.PlayGainAnim
// 0x0008 (0x0008 - 0x0000)
struct Wp0010_AN_C_PlayGainAnim final
{
public:
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wp0010_AN_C_PlayGainAnim) == 0x000008, "Wrong alignment on Wp0010_AN_C_PlayGainAnim");
static_assert(sizeof(Wp0010_AN_C_PlayGainAnim) == 0x000008, "Wrong size on Wp0010_AN_C_PlayGainAnim");
static_assert(offsetof(Wp0010_AN_C_PlayGainAnim, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000000, "Member 'Wp0010_AN_C_PlayGainAnim::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");

// Function wp0010_AN.wp0010_AN_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Wp0010_AN_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Wp0010_AN_C_AnimGraph) == 0x000008, "Wrong alignment on Wp0010_AN_C_AnimGraph");
static_assert(sizeof(Wp0010_AN_C_AnimGraph) == 0x000010, "Wrong size on Wp0010_AN_C_AnimGraph");
static_assert(offsetof(Wp0010_AN_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Wp0010_AN_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

