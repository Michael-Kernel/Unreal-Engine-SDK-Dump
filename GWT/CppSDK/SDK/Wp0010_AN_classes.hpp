#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wp0010_AN

#include "Basic.hpp"

#include "Wp0000_AnimRequest_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Snowfall_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass wp0010_AN.wp0010_AN_C
// 0x0660 (0x0920 - 0x02C0)
class UWp0010_AN_C final : public USnfWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0460(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0488(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0570(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x05A0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0688(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x06B8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0738(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0768(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x07E8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0818(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08C8(0x0048)()
	float                                         AimRate;                                           // 0x0910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBend;                                             // 0x0914(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCancel;                                           // 0x0915(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShoot;                                            // 0x0916(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWp0000_AnimRequest                           AnimRequest;                                       // 0x0917(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAim;                                              // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_919[0x3];                                      // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShootPlaySpeedRate;                                // 0x091C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_wp0010_AN(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_StartShoot();
	void AnimNotify_StartCharge();
	void AnimNotify_StartBend();
	void AnimNotify_StartIdle();
	void RequestAnim(class FName Request);
	void PlayGainAnim();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"wp0010_AN_C">();
	}
	static class UWp0010_AN_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWp0010_AN_C>();
	}
};
static_assert(alignof(UWp0010_AN_C) == 0x000010, "Wrong alignment on UWp0010_AN_C");
static_assert(sizeof(UWp0010_AN_C) == 0x000920, "Wrong size on UWp0010_AN_C");
static_assert(offsetof(UWp0010_AN_C, UberGraphFrame) == 0x0002C0, "Member 'UWp0010_AN_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UWp0010_AN_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_9) == 0x0002F8, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_8) == 0x000320, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_7) == 0x000348, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_6) == 0x000370, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_5) == 0x000398, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_4) == 0x0003C0, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_3) == 0x0003E8, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_2) == 0x000410, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult_1) == 0x000438, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_TransitionResult) == 0x000460, "Member 'UWp0010_AN_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000488, "Member 'UWp0010_AN_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_StateResult_3) == 0x000570, "Member 'UWp0010_AN_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_BlendSpacePlayer) == 0x0005A0, "Member 'UWp0010_AN_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_StateResult_2) == 0x000688, "Member 'UWp0010_AN_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_SequencePlayer_1) == 0x0006B8, "Member 'UWp0010_AN_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_StateResult_1) == 0x000738, "Member 'UWp0010_AN_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_SequencePlayer) == 0x000768, "Member 'UWp0010_AN_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_StateResult) == 0x0007E8, "Member 'UWp0010_AN_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_StateMachine) == 0x000818, "Member 'UWp0010_AN_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimGraphNode_Slot) == 0x0008C8, "Member 'UWp0010_AN_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AimRate) == 0x000910, "Member 'UWp0010_AN_C::AimRate' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, bBend) == 0x000914, "Member 'UWp0010_AN_C::bBend' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, bCancel) == 0x000915, "Member 'UWp0010_AN_C::bCancel' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, bShoot) == 0x000916, "Member 'UWp0010_AN_C::bShoot' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, AnimRequest) == 0x000917, "Member 'UWp0010_AN_C::AnimRequest' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, bAim) == 0x000918, "Member 'UWp0010_AN_C::bAim' has a wrong offset!");
static_assert(offsetof(UWp0010_AN_C, ShootPlaySpeedRate) == 0x00091C, "Member 'UWp0010_AN_C::ShootPlaySpeedRate' has a wrong offset!");

}

