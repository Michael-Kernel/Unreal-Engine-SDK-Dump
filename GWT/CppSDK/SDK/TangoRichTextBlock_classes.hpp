#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TangoRichTextBlock

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class TangoRichTextBlock.TngRichTextBlock
// 0x0098 (0x0710 - 0x0678)
class UTngRichTextBlock final : public URichTextBlock
{
public:
	bool                                          bDecorateImageHidden;                              // 0x0678(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_679[0x3];                                      // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DefaultTextStyleName;                              // 0x067C(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseOverrideTextStyle;                             // 0x0684(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OverrideFontTypefaceName;                          // 0x0688(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         OverrideFontSize;                                  // 0x0690(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         OverrideFontLetterSpacing;                         // 0x0694(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                            OverrideFontColor;                                 // 0x0698(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                         OverrideFontOutlineSize;                           // 0x06C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           OverrideFontOutlineColor;                          // 0x06C4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideFontSeparateFillAlpha;                    // 0x06D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideFontOutlineToDropShadows;                 // 0x06D5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseOverrideImageStyle;                            // 0x06D6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6D7[0x1];                                      // 0x06D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideMaxAddedImages;                            // 0x06D8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              OverrideImageSize;                                 // 0x06DC(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EStretch                                      OverrideImageStretch;                              // 0x06E4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6E5[0x1];                                      // 0x06E5(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int16                                         OverrideImageBaselineOffset;                       // 0x06E6(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                            OverrideImageColorAndOpacity;                      // 0x06E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlock">();
	}
	static class UTngRichTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlock>();
	}
};
static_assert(alignof(UTngRichTextBlock) == 0x000008, "Wrong alignment on UTngRichTextBlock");
static_assert(sizeof(UTngRichTextBlock) == 0x000710, "Wrong size on UTngRichTextBlock");
static_assert(offsetof(UTngRichTextBlock, bDecorateImageHidden) == 0x000678, "Member 'UTngRichTextBlock::bDecorateImageHidden' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, DefaultTextStyleName) == 0x00067C, "Member 'UTngRichTextBlock::DefaultTextStyleName' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, bUseOverrideTextStyle) == 0x000684, "Member 'UTngRichTextBlock::bUseOverrideTextStyle' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontTypefaceName) == 0x000688, "Member 'UTngRichTextBlock::OverrideFontTypefaceName' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontSize) == 0x000690, "Member 'UTngRichTextBlock::OverrideFontSize' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontLetterSpacing) == 0x000694, "Member 'UTngRichTextBlock::OverrideFontLetterSpacing' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontColor) == 0x000698, "Member 'UTngRichTextBlock::OverrideFontColor' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontOutlineSize) == 0x0006C0, "Member 'UTngRichTextBlock::OverrideFontOutlineSize' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideFontOutlineColor) == 0x0006C4, "Member 'UTngRichTextBlock::OverrideFontOutlineColor' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, bOverrideFontSeparateFillAlpha) == 0x0006D4, "Member 'UTngRichTextBlock::bOverrideFontSeparateFillAlpha' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, bOverrideFontOutlineToDropShadows) == 0x0006D5, "Member 'UTngRichTextBlock::bOverrideFontOutlineToDropShadows' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, bUseOverrideImageStyle) == 0x0006D6, "Member 'UTngRichTextBlock::bUseOverrideImageStyle' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideMaxAddedImages) == 0x0006D8, "Member 'UTngRichTextBlock::OverrideMaxAddedImages' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideImageSize) == 0x0006DC, "Member 'UTngRichTextBlock::OverrideImageSize' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideImageStretch) == 0x0006E4, "Member 'UTngRichTextBlock::OverrideImageStretch' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideImageBaselineOffset) == 0x0006E6, "Member 'UTngRichTextBlock::OverrideImageBaselineOffset' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlock, OverrideImageColorAndOpacity) == 0x0006E8, "Member 'UTngRichTextBlock::OverrideImageColorAndOpacity' has a wrong offset!");

// Class TangoRichTextBlock.TngRichTextBlockImageDecoratorBase
// 0x0008 (0x0030 - 0x0028)
class UTngRichTextBlockImageDecoratorBase : public URichTextBlockDecorator
{
public:
	class UTngRichTextBlock*                      OwnerRichTextBlock;                                // 0x0028(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlockImageDecoratorBase">();
	}
	static class UTngRichTextBlockImageDecoratorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlockImageDecoratorBase>();
	}
};
static_assert(alignof(UTngRichTextBlockImageDecoratorBase) == 0x000008, "Wrong alignment on UTngRichTextBlockImageDecoratorBase");
static_assert(sizeof(UTngRichTextBlockImageDecoratorBase) == 0x000030, "Wrong size on UTngRichTextBlockImageDecoratorBase");
static_assert(offsetof(UTngRichTextBlockImageDecoratorBase, OwnerRichTextBlock) == 0x000028, "Member 'UTngRichTextBlockImageDecoratorBase::OwnerRichTextBlock' has a wrong offset!");

// Class TangoRichTextBlock.TngRichTextBlockImageDecorator
// 0x0008 (0x0038 - 0x0030)
class UTngRichTextBlockImageDecorator final : public UTngRichTextBlockImageDecoratorBase
{
public:
	class UDataTable*                             ImageSet;                                          // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlockImageDecorator">();
	}
	static class UTngRichTextBlockImageDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlockImageDecorator>();
	}
};
static_assert(alignof(UTngRichTextBlockImageDecorator) == 0x000008, "Wrong alignment on UTngRichTextBlockImageDecorator");
static_assert(sizeof(UTngRichTextBlockImageDecorator) == 0x000038, "Wrong size on UTngRichTextBlockImageDecorator");
static_assert(offsetof(UTngRichTextBlockImageDecorator, ImageSet) == 0x000030, "Member 'UTngRichTextBlockImageDecorator::ImageSet' has a wrong offset!");

// Class TangoRichTextBlock.TngRichTextBlockPlatformImageSettings
// 0x0048 (0x0070 - 0x0028)
class UTngRichTextBlockPlatformImageSettings final : public UObject
{
public:
	TArray<TSoftObjectPtr<class UDataTable>>      ImageSets;                                         // 0x0028(0x0010)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataTable>>      ImageSetsForCook;                                  // 0x0038(0x0010)(ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FName>                           ImageSetTypeNames;                                 // 0x0048(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FName                                   ImageSetTypeNameForKeyboardMouse;                  // 0x0058(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                     CachedImageSets;                                   // 0x0060(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlockPlatformImageSettings">();
	}
	static class UTngRichTextBlockPlatformImageSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlockPlatformImageSettings>();
	}
};
static_assert(alignof(UTngRichTextBlockPlatformImageSettings) == 0x000008, "Wrong alignment on UTngRichTextBlockPlatformImageSettings");
static_assert(sizeof(UTngRichTextBlockPlatformImageSettings) == 0x000070, "Wrong size on UTngRichTextBlockPlatformImageSettings");
static_assert(offsetof(UTngRichTextBlockPlatformImageSettings, ImageSets) == 0x000028, "Member 'UTngRichTextBlockPlatformImageSettings::ImageSets' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlockPlatformImageSettings, ImageSetsForCook) == 0x000038, "Member 'UTngRichTextBlockPlatformImageSettings::ImageSetsForCook' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlockPlatformImageSettings, ImageSetTypeNames) == 0x000048, "Member 'UTngRichTextBlockPlatformImageSettings::ImageSetTypeNames' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlockPlatformImageSettings, ImageSetTypeNameForKeyboardMouse) == 0x000058, "Member 'UTngRichTextBlockPlatformImageSettings::ImageSetTypeNameForKeyboardMouse' has a wrong offset!");
static_assert(offsetof(UTngRichTextBlockPlatformImageSettings, CachedImageSets) == 0x000060, "Member 'UTngRichTextBlockPlatformImageSettings::CachedImageSets' has a wrong offset!");

// Class TangoRichTextBlock.TngRichTextBlockPlatformImageDecorator
// 0x0000 (0x0030 - 0x0030)
class UTngRichTextBlockPlatformImageDecorator final : public UTngRichTextBlockImageDecoratorBase
{
public:
	static void K2_FindImageBrushes(TArray<struct FSlateBrush>& OutBrushes, class APlayerController* PlayerController, class FName TagOrId, int32 MaxDecorations);
	static void K2_FindImageBrushesEx(TArray<struct FSlateBrush>& OutBrushes, TArray<class FText>& OutPendingDecorations, class APlayerController* PlayerController, class FName TagOrId, int32 MaxDecorations);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlockPlatformImageDecorator">();
	}
	static class UTngRichTextBlockPlatformImageDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlockPlatformImageDecorator>();
	}
};
static_assert(alignof(UTngRichTextBlockPlatformImageDecorator) == 0x000008, "Wrong alignment on UTngRichTextBlockPlatformImageDecorator");
static_assert(sizeof(UTngRichTextBlockPlatformImageDecorator) == 0x000030, "Wrong size on UTngRichTextBlockPlatformImageDecorator");

// Class TangoRichTextBlock.TngRichTextBlockInlineDecorator
// 0x0008 (0x0030 - 0x0028)
class UTngRichTextBlockInlineDecorator final : public URichTextBlockDecorator
{
public:
	class UTngRichTextBlock*                      OwnerRichTextBlock;                                // 0x0028(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TngRichTextBlockInlineDecorator">();
	}
	static class UTngRichTextBlockInlineDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTngRichTextBlockInlineDecorator>();
	}
};
static_assert(alignof(UTngRichTextBlockInlineDecorator) == 0x000008, "Wrong alignment on UTngRichTextBlockInlineDecorator");
static_assert(sizeof(UTngRichTextBlockInlineDecorator) == 0x000030, "Wrong size on UTngRichTextBlockInlineDecorator");
static_assert(offsetof(UTngRichTextBlockInlineDecorator, OwnerRichTextBlock) == 0x000028, "Member 'UTngRichTextBlockInlineDecorator::OwnerRichTextBlock' has a wrong offset!");

}

