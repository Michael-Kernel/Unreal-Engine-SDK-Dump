#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NormalArrow_AC

#include "Basic.hpp"

#include "Snowfall_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NormalArrow_AC.NormalArrow_AC_C.ExecuteUbergraph_NormalArrow_AC
// 0x0168 (0x0168 - 0x0000)
struct NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0010(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(struct FHitResult& HitResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASnfEnemyCharacter*                     K2Node_DynamicCast_AsSnf_Enemy_Character;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESnfDamagePartsType                           CallFunc_GetDamagePartsType_ReturnValue;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_EndLocation;                          // 0x0150(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndDirection;                         // 0x015C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC) == 0x000008, "Wrong alignment on NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC");
static_assert(sizeof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC) == 0x000168, "Wrong size on NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, EntryPoint) == 0x000000, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::EntryPoint' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_Event_OwnerActor) == 0x000008, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_CustomEvent_HitResult) == 0x000010, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A8, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A9, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_Time) == 0x0000AC, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_Distance) == 0x0000B0, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_Location) == 0x0000B4, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C0, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_Normal) == 0x0000CC, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D8, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_PhysMat) == 0x0000E8, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_HitActor) == 0x0000F0, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_HitComponent) == 0x0000F8, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_HitBoneName) == 0x000100, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_HitItem) == 0x000108, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_ElementIndex) == 0x00010C, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_FaceIndex) == 0x000110, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_TraceStart) == 0x000114, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_BreakHitResult_TraceEnd) == 0x000120, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_DynamicCast_AsSnf_Enemy_Character) == 0x000130, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_DynamicCast_AsSnf_Enemy_Character' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_GetDamagePartsType_ReturnValue) == 0x000139, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_GetDamagePartsType_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_CreateDelegate_OutputDelegate_1) == 0x00013C, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00014C, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_Event_EndLocation) == 0x000150, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_Event_EndLocation' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC, K2Node_Event_EndDirection) == 0x00015C, "Member 'NormalArrow_AC_C_ExecuteUbergraph_NormalArrow_AC::K2Node_Event_EndDirection' has a wrong offset!");

// Function NormalArrow_AC.NormalArrow_AC_C.RangeOver
// 0x0018 (0x0018 - 0x0000)
struct NormalArrow_AC_C_RangeOver final
{
public:
	struct FVector                                EndLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndDirection;                                      // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalArrow_AC_C_RangeOver) == 0x000004, "Wrong alignment on NormalArrow_AC_C_RangeOver");
static_assert(sizeof(NormalArrow_AC_C_RangeOver) == 0x000018, "Wrong size on NormalArrow_AC_C_RangeOver");
static_assert(offsetof(NormalArrow_AC_C_RangeOver, EndLocation) == 0x000000, "Member 'NormalArrow_AC_C_RangeOver::EndLocation' has a wrong offset!");
static_assert(offsetof(NormalArrow_AC_C_RangeOver, EndDirection) == 0x00000C, "Member 'NormalArrow_AC_C_RangeOver::EndDirection' has a wrong offset!");

// Function NormalArrow_AC.NormalArrow_AC_C.OnHitEvent
// 0x0088 (0x0088 - 0x0000)
struct NormalArrow_AC_C_OnHitEvent final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NormalArrow_AC_C_OnHitEvent) == 0x000004, "Wrong alignment on NormalArrow_AC_C_OnHitEvent");
static_assert(sizeof(NormalArrow_AC_C_OnHitEvent) == 0x000088, "Wrong size on NormalArrow_AC_C_OnHitEvent");
static_assert(offsetof(NormalArrow_AC_C_OnHitEvent, HitResult) == 0x000000, "Member 'NormalArrow_AC_C_OnHitEvent::HitResult' has a wrong offset!");

// Function NormalArrow_AC.NormalArrow_AC_C.InitializeAmmo
// 0x0008 (0x0008 - 0x0000)
struct NormalArrow_AC_C_InitializeAmmo final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalArrow_AC_C_InitializeAmmo) == 0x000008, "Wrong alignment on NormalArrow_AC_C_InitializeAmmo");
static_assert(sizeof(NormalArrow_AC_C_InitializeAmmo) == 0x000008, "Wrong size on NormalArrow_AC_C_InitializeAmmo");
static_assert(offsetof(NormalArrow_AC_C_InitializeAmmo, OwnerActor) == 0x000000, "Member 'NormalArrow_AC_C_InitializeAmmo::OwnerActor' has a wrong offset!");

// Function NormalArrow_AC.NormalArrow_AC_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NormalArrow_AC_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalArrow_AC_C_ReceiveTick) == 0x000004, "Wrong alignment on NormalArrow_AC_C_ReceiveTick");
static_assert(sizeof(NormalArrow_AC_C_ReceiveTick) == 0x000004, "Wrong size on NormalArrow_AC_C_ReceiveTick");
static_assert(offsetof(NormalArrow_AC_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NormalArrow_AC_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

