#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wp0010_BowNormal_AC

#include "Basic.hpp"

#include "Snowfall_structs.hpp"
#include "Engine_structs.hpp"
#include "BowBase_AC_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass wp0010_BowNormal_AC.wp0010_BowNormal_AC_C
// 0x0020 (0x0870 - 0x0850)
class AWp0010_BowNormal_AC_C final : public ABowBase_AC_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0850(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UClass*>                         IgnoreActorClass;                                  // 0x0858(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bValidLaunchFXProp;                                // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bChargeStart;                                      // 0x0869(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCanShot;                                          // 0x086A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B[0x1];                                      // 0x086B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LanchOffsetAngle;                                  // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_wp0010_BowNormal_AC(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnReloadEvent();
	void ReceiveTick(float DeltaSeconds);
	void OnAimEndEvent();
	void OnAimBeginEvent();
	void OnEquipCallbackEvent();
	void LaunchAmmo(const struct FVector& MuzzleLocation, const struct FVector& MuzzleDirection);
	void OnFireCancelEvent();
	void OnFireEndEvent();
	void OnFireBeginEvent();
	bool IsHitIgnoreActor(const class AActor* Causer, const class AActor* InHitActor, bool bCheckTeamId, bool bCheckOwner, bool bCheckClass);
	void PlayAmmoFxProp(class FName PlayListName);
	float GetChargeRate();
	void PlayGainAnim();
	struct FVector GetLaunchDirection(int32 ID, const struct FTransform& MuzzleTransform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"wp0010_BowNormal_AC_C">();
	}
	static class AWp0010_BowNormal_AC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWp0010_BowNormal_AC_C>();
	}
};
static_assert(alignof(AWp0010_BowNormal_AC_C) == 0x000010, "Wrong alignment on AWp0010_BowNormal_AC_C");
static_assert(sizeof(AWp0010_BowNormal_AC_C) == 0x000870, "Wrong size on AWp0010_BowNormal_AC_C");
static_assert(offsetof(AWp0010_BowNormal_AC_C, UberGraphFrame) == 0x000850, "Member 'AWp0010_BowNormal_AC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWp0010_BowNormal_AC_C, IgnoreActorClass) == 0x000858, "Member 'AWp0010_BowNormal_AC_C::IgnoreActorClass' has a wrong offset!");
static_assert(offsetof(AWp0010_BowNormal_AC_C, bValidLaunchFXProp) == 0x000868, "Member 'AWp0010_BowNormal_AC_C::bValidLaunchFXProp' has a wrong offset!");
static_assert(offsetof(AWp0010_BowNormal_AC_C, bChargeStart) == 0x000869, "Member 'AWp0010_BowNormal_AC_C::bChargeStart' has a wrong offset!");
static_assert(offsetof(AWp0010_BowNormal_AC_C, bCanShot) == 0x00086A, "Member 'AWp0010_BowNormal_AC_C::bCanShot' has a wrong offset!");
static_assert(offsetof(AWp0010_BowNormal_AC_C, LanchOffsetAngle) == 0x00086C, "Member 'AWp0010_BowNormal_AC_C::LanchOffsetAngle' has a wrong offset!");

}

